@using Vidlz.Models
@using WebGrease
@model IEnumerable<Vidlz.Models.Marker>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="mapDiv" data-dojo-type="dijit/layout/ContentPane"
     data-dojo-props="region:'center'" style="padding:0;">

    @* Basemap Gallery *@
    <div id="galleryDiv">
        <div data-dojo-type="dijit/TitlePane"
             data-dojo-props="title:'Switch Basemap', open:false" class="btn btn-primary">
            <div id="gallery" data-dojo-type="dijit/layout/ContentPane">
                <div id="basemapGallery"></div>
            </div>
        </div>
    </div>

    @* Clear all button *@
    <div class="form-actions no-color" id="clearAll">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <input class="btn btn-danger" type="button" title="Clear all" value="Clear all" onclick="location.href = '@Url.Action("DeleteAll", "Marker")'" />
        }
    </div>


    @* Random button *@
    <div class="form-actions no-color" id="random">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <input class="btn btn-success" type="button" title="Random" value="Random" onclick="location.href = '@Url.Action("Random", "Marker")'" />
        }
    </div>
</div>

<script language="javascript" type="text/javascript">
    var map;

    require([
        "esri/map",
        "esri/dijit/BasemapGallery",
        "dojo/dom",
        "dojo/on",
        "dojo/dom-construct",
        "dojo/parser",
        "esri/graphic",
        "esri/symbols/SimpleMarkerSymbol",
        "esri/Color",
        "esri/geometry/Point",
        "esri/InfoTemplate",
        "esri/geometry/webMercatorUtils",
        "esri/geometry/Geometry"],

        function (Map,
            BasemapGallery,
            dom,
            on,
            domConstruct,
            parser,
            graphic,
            SimpleMarkerSymbol,
            Color,
            Point,
            InfoTemplate,
            webMercatorUtils,
            Geometry) {

            parser.parse();

            // Add a default map
            map = new Map("mapDiv",
                {
                    basemap: "streets",
                    center: [11.24807, 44.57694],
                    zoom: 7
                });

            // Define marker
            var markerSymbol = new SimpleMarkerSymbol();
            markerSymbol.setColor(new Color("#00FFFF"));
            markerSymbol.setPath(
                "M16,4.938c-7.732,0-14,4.701-14,10.5c0,1.981,0.741,3.833,2.016,5.414L2,25.272l5.613-1.44c2.339,1.316,5.237,2.106,8.387,2.106c7.732,0,14-4.701,14-10.5S23.732,4.938,16,4.938zM16.868,21.375h-1.969v-1.889h1.969V21.375zM16.772,18.094h-1.777l-0.176-8.083h2.113L16.772,18.094z");


            // Add a point when the map is clicked, store coordinates to database
            dojo.connect(map,
                'onClick',
                function(evt) {
                    map.graphics.add(new esri.Graphic(
                        evt.mapPoint,
                        markerSymbol
                    ));

                    var x1, y1; // Coordinates
                    var mp = esri.geometry.webMercatorToGeographic(evt.mapPoint);
                    x1 = mp.x.toFixed(5);
                    y1 = mp.y.toFixed(5);

                    $.ajax({
                        type: 'POST',
                        url: '/Marker/Insert/',
                        data: JSON.stringify({ x: x1, y: y1 }),
                        contentType: "application/json; charset=utf-8",
                        dataType: 'json'
                    });

                    map.infoWindow.setContent("Longitude: " + x1 + ", <br>Latitude: " + y1);
                    map.infoWindow.resize(150, 75);
                    map.infoWindow.show(evt.mapPoint)
                });


            // Load markers from database and show them on the map
            @foreach(var item in Model)
            {
                <text>
                    dojo.connect(map, 'onLoad', function () {

                        var pt = new esri.geometry.Point([JSON.stringify(@item.Longitude), JSON.stringify(@item.Latitude)]);
                        map.graphics.add(new esri.Graphic(
                            new esri.geometry.geographicToWebMercator(pt),
                            markerSymbol));
                    })
                </text>
            }
            // Create a Basemap Gallery
            var basemapGallery = new BasemapGallery({
                    showArcGISBasemaps: true,
                    map: map
                },
                "basemapGallery");
            basemapGallery.startup();
            basemapGallery.on("error",
                function(msg) {
                    console.log("basemap gallery error:  ", msg);
                });

        });

</script>